- id: [0, 0]
  name: Category
  info: Category of items that represent categories
  class_name: hyperweb.item.Category
  endpoints: {__view__: '

      context $item

      from base import %page_category

      page_category item

      '}
  fields:
    name:
      schema: {'@': hyperweb.schema.STRING}
      info: human-readable title of the category
    info:
      schema: {'@': hyperweb.schema.STRING}
    class_name:
      schema: {'@': hyperweb.schema.STRING}
      default: hyperweb.item.Item
      info: Full (dotted) path of a python class. Or the class name that should be
        imported from `class_code` after its execution.
    class_code:
      schema: {'@': hyperweb.schema.TEXT}
    endpoints:
      schema:
        values: {'@': hyperweb.schema.CODE}
        '@': hyperweb.schema.CATALOG
      default: {__view__: '

          context $item

          from base import %page_item

          page_item $item

          # dedent : page_item $item

          '}
    fields:
      schema:
        values:
          schema:
            schema:
              type: []
              base: {'=': hyperweb.schema.Schema, '@': builtins.type}
              '@': hyperweb.schema.OBJECT
            '@': hyperweb.item.Field
          default:
            schema:
              type: []
              base: []
              '@': hyperweb.schema.OBJECT
            '@': hyperweb.item.Field
          multi:
            schema: {'@': hyperweb.schema.BOOLEAN}
            '@': hyperweb.item.Field
          info:
            schema: {'@': hyperweb.schema.STRING}
            '@': hyperweb.item.Field
          '@': hyperweb.schema.FIELD
        type: {'=': hyperweb.schema.FIELDS, '@': builtins.type}
        '@': hyperweb.schema.CATALOG
- id: [0, 1]
  name: Directory
  info: A directory of items, each item has a unique name (path). May contain nested
    subdirectories. Similar to a file system.
  class_name: hyperweb.item.Directory
  fields:
    files:
      schema:
        keys: {'@': hyperweb.schema.FILENAME}
        values: {'@': hyperweb.schema.FILE}
        '@': hyperweb.schema.CATALOG
- id: [0, 2]
  name: Space
  info: Category of items that represent item spaces.
  fields:
    name:
      schema: {'@': hyperweb.schema.STRING}
    categories:
      schema:
        values:
          category:
            '=': [0, 0]
            '@': (item)
          '@': hyperweb.schema.ITEM
        '@': hyperweb.schema.CATALOG
  class_name: Space
  class_code: "\n        from hyperweb.item import Item\n        class Space(Item):\n\
    \            def get_category(self, name):\n                return self['categories'][name]\n\
    \    "
- id: [0, 3]
  name: Application
  info: Category of application records. An application groups all spaces & categories
    available in the system and provides system-level configuration.
  class_name: hyperweb.item.Application
  fields:
    name:
      schema: {'@': hyperweb.schema.STRING}
    routing:
      schema:
        values: [raw, spaces]
        indices: false
        '@': hyperweb.schema.ENUM
    spaces:
      schema:
        values:
          category:
            '=': [0, 2]
            '@': (item)
          '@': hyperweb.schema.ITEM
        '@': hyperweb.schema.CATALOG
  folder: {'@': hyperweb.schema.FILEPATH}
- id: [0, 4]
  name: Admin Application
  class_name: hyperweb.item.AdminApp
  fields:
    name:
      schema: {'@': hyperweb.schema.STRING}
- id: [0, 5]
  name: Files Application
  class_name: hyperweb.item.FilesApp
  fields:
    name:
      schema: {'@': hyperweb.schema.STRING}
- id: [0, 6]
  name: Site
  info: Category of site records. A site contains information about applications,
    servers, startup
  class_name: hyperweb.item.Site
  fields:
    name:
      schema: {'@': hyperweb.schema.STRING}
    base_url:
      schema: {'@': hyperweb.schema.STRING}
    directory:
      schema:
        category:
          '=': [0, 1]
          '@': (item)
        '@': hyperweb.schema.ITEM
    apps:
      schema:
        values:
          category:
            '=': [0, 3]
            '@': (item)
          '@': hyperweb.schema.ITEM
        '@': hyperweb.schema.CATALOG
- id: [0, 7]
  name: Varia
  info: Category of items that do not belong to any specific category
  class_name: hyperweb.item.Item
  fields:
    name:
      schema: {'@': hyperweb.schema.STRING}
    title:
      schema: {'@': hyperweb.schema.STRING}
- id: [0, 8]
  name: File
  info: File with a text content. Accessible through the web filesystem.
  class_name: hyperweb.item.File
  fields:
    format:
      schema: {'@': hyperweb.schema.STRING}
    content:
      schema: {'@': hyperweb.schema.CODE}
- id: [0, 9]
  name: Text
  info: Plain or rich text for human consumption. May keep information about language
    and/or markup.
  fields:
    language:
      schema: {'@': hyperweb.schema.STRING}
    markup:
      schema: {'@': hyperweb.schema.STRING}
    text:
      schema: {'@': hyperweb.schema.TEXT}
- id: [0, 10]
  name: LocalFile
  info: File located on a local disk, identified by its local file path.
  class_name: hyperweb.item.LocalFile
  fields:
    path:
      schema: {'@': hyperweb.schema.STRING}
- id: [8, 1]
  format: css
  content: "\n        /*** GENERAL STYLES */\n        # html {\n        #   font-family:\
    \ 'Quattrocento Sans', \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n   \
    \     #   font-size: 16px;\n        #   color: #333;\n        # }\n\n        html\
    \ {\n          --ct-cell-pad: 35px;          /* default left & right padding of\
    \ all table cells */\n          --ct-nested-offset: 50px;     /* distance between\
    \ left edges of a nested catalog and its container catalog */\n          --ct-th1-width:\
    \ 300px;\n          --ct-th2-width: calc(var(--ct-th1-width) - var(--ct-nested-offset));\n\
    \          --textarea-height: 12rem;\n        }\n        body {\n          width:\
    \ 1120px;\n          margin: 0 auto;\n          padding-bottom: 50px;\n      \
    \    font-family: 'Quattrocento Sans', \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n\
    \        }\n        \n        h1, h2, h3 { margin-top: 0.8em; margin-bottom: 0.6em;\
    \ }\n        \n        a { color: #006ecc }\n        a:visited { color: #00427a\
    \ }\n        \n        /*** SITEWIDE */\n        \n        .btn { border: none;\
    \ border-radius: 0; }\n        .btn-primary, .btn-primary.disabled, .btn-primary:disabled\
    \       { background-color: #5b8fdd; }\n        .btn-primary:hover           \
    \                                    { background-color: #4b78bb; }\n        .btn-secondary,\
    \ .btn-secondary.disabled, .btn-secondary:disabled { background-color: #7e8993;\
    \ }\n        \n        /*** UTILITIES */\n        \n        .scroll {\n      \
    \      overflow: scroll;\n            max-height: var(--textarea-height);\n  \
    \          border-bottom: 1px solid rgba(0,0,0,0.1);\n            border-right:\
    \  1px solid rgba(0,0,0,0.1);\n            resize: vertical;\n        }\n    \
    \    .scroll[style*=\"height\"] {\n            max-height: unset;            \
    \  /* this allows manual resizing (resize:vertical) to exceed predefined max-height\
    \ */\n        }\n        \n        /*** WIDGETS */\n        \n        .ace-editor\
    \ {\n            --bk-color: rgba(255,255,255,0.3);\n            background-color:\
    \ var(--bk-color);\n            height: var(--textarea-height);\n            width:\
    \ 100%;\n            line-height: 1.4;\n            font-family: var(--bs-font-monospace);\n\
    \            font-size: 13px;\n            resize: vertical;        /* editor\
    \ box resizing requires editor.resize() to be invoked by ResizeObserver */\n \
    \           /*margin-left: -10px;      /* shift the editor to better align inner\
    \ text with text of surrounding rows in a catalog */\n            /*border-left:\
    \ 8px solid var(--bk-color);*/\n        }\n\n        /*** ITEM PAGE */\n\n   \
    \     .ct-color0                      { background: #e2eef9; }   /* #D0E4F5 */\n\
    \        .ct-color1                      { background: #f6f6f6; }\n\n        .catalog-1\
    \ th, .catalog-1 td    { padding: 14px var(--ct-cell-pad) 11px; /*border-right:\
    \ none;*/ }\n        .wrap-offset                    { padding-left: calc(var(--ct-nested-offset)\
    \ - var(--ct-cell-pad)); }\n        td.ct-nested                    { padding-right:\
    \ 0px; padding-bottom: 0px; }\n        td.ct-flags                     { width:\
    \ 30px; padding-left:20px; padding-right:20px; }\n\n        .catalog-1, .catalog-2\
    \          { border-collapse: collapse; table-layout: fixed; }\n        .catalog-1\
    \ th, .catalog-2 th    { border-right: 1px solid #fff; }\n        .catalog-1 tr:not(:last-child)\
    \  { border-bottom: 1px solid #fff; }\n\n        .catalog-1                  \
    \    { width: 100%; min-width: 100%; max-width: 100%; }\n        .catalog-1 th\
    \                   { width: var(--ct-th1-width); min-width: var(--ct-th1-width);\
    \ max-width: var(--ct-th1-width); }\n\n        /* th widths get reduced by 55px\
    \ when nesting a subcatalog to account for paddings of outer td + div */\n   \
    \     .catalog-2                  { width: 100%; }\n        .catalog-2 th    \
    \           { padding-left: 15px; width: var(--ct-th2-width); min-width: var(--ct-th2-width);\
    \ max-width: var(--ct-th2-width); }\n        /*.catalog-2 th               { width:\
    \ 195px; min-width: 195px; max-width: 195px; padding-left: 15px; }*/\n       \
    \ \n        .catalog-1 .ct-field        { font-weight: bold;   font-size: 15px;\
    \ }\n        .catalog-2 .ct-field        { font-weight: normal; font-style: italic;\
    \ }\n        \n        .ct-value, .ct-value > *    { font-size: 14px; font-family:\
    \ monospace; /* courier */ }\n        .ct-value .field .default   { color: #888;\
    \ }\n        .ct-value .field .info      { font-style: italic; }\n        .ct-value\
    \ pre               { margin-bottom: 0px; font-size: 13px; font-family: monospace;\
    \ }\n    "
- id: [8, 2]
  format: javascript
  local_path: /home/marcin/Documents/priv/catalog/src/django-app/hyperweb/static/protocols.js
- id: [8, 3]
  format: hypertag
  content: "\n    %assets_external\n        # jQuery 3.6.0\n        script src=\"\
    https://cdn.jsdelivr.net/npm/jquery@3.6.0/dist/jquery.min.js\" integrity=\"sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=\"\
    \ crossorigin=\"anonymous\"\n        # Bootstrap 5.0.2\n        link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\"\
    \ rel=\"stylesheet\" integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\"\
    \ crossorigin=\"anonymous\"\n        script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js\"\
    \ integrity=\"sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM\"\
    \ crossorigin=\"anonymous\"\n        # Lodash 4.17.21 (https://lodash.com/)\n\
    \        script src=\"https://cdn.jsdelivr.net/npm/lodash@4.17.21/lodash.min.js\"\
    \ integrity=\"sha256-qXBd/EfAdjOA2FGrGAG+b3YBn2tn5A6bhz+LSgYD96k=\" crossorigin=\"\
    anonymous\"\n\n        # # React\n        # # Uwaga: podczas wdrażania aplikacji\
    \ do środowiska produkcyjnego, zamień \"development.js\" na \"production.min.js\"\
    \n        # script src=\"https://unpkg.com/react@17/umd/react.development.js\"\
    \ crossorigin=True\n        # script src=\"https://unpkg.com/react-dom@17/umd/react-dom.development.js\"\
    \ crossorigin=True\n        \n        # # Lit\n        # script type=\"module\"\
    \ !\n        #     import {LitElement, html, css} from 'https://unpkg.com/lit-element/lit-element.js?module';\n\
    \        #     window.LitElement = LitElement;\n        #\n        #     class\
    \ MyElement extends LitElement {\n        #         static get properties() {\
    \ return { mood: {type: String} } }\n        #         static get styles() { return\
    \ css`.mood { color: green; }`; }\n        #         render() { return html`Web\
    \ Components are <span class=\"mood\">${this.mood}</span>!`; }\n        #    \
    \ }\n        #     customElements.define('my-element', MyElement);\n\n       \
    \ # ACE (code editor)\n        # keyboard shortcuts: https://github.com/ajaxorg/ace/wiki/Default-Keyboard-Shortcuts\n\
    \        # existing highlighters: https://github.com/ajaxorg/ace/tree/master/lib/ace/mode\n\
    \        # default commands and shortcuts: https://github.com/ajaxorg/ace/tree/master/lib/ace/commands\
    \ (-> editor.commands.addCommand() ..removeCommand())\n        script src=\"https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.12/ace.js\"\
    \ integrity=\"sha512-GZ1RIgZaSc8rnco/8CXfRdCpDxRCphenIiZ2ztLy3XQfCbQUSCuk8IudvNHxkRA3oUg6q0qejgN/qqyG1duv5Q==\"\
    \ crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\"\n        \n       \
    \ # # CodeMirror (code editor)\n        # script src=\"https://cdn.jsdelivr.net/npm/codemirror@5.62.3/lib/codemirror.min.js\"\
    \n\n    %assets_internal\n        script type=\"module\" src=\"/sys.file:1@get\"\
    \n        # script type=\"module\" src=\"/files/protocols.js\"\n\n    %assets\n\
    \        assets_external\n        assets_internal\n    \n    %protocol @body classname\n\
    \        # asset \".../protocols.js\"\n        div .widget protocol=classname\n\
    \            @body\n\n    %catalog_row key value schema\n        # a row containing\
    \ an atomic value of a data field (not a subcatalog)\n        th .ct-field | $key\n\
    \        # td .ct-flags | *\n        td .ct-value / $schema.display(value)\n\n\
    \    %catalog_2 data schema start_color=0\n        $c = start_color\n        div\
    \ .wrap-offset : table .catalog-2\n            for name, value in data.items()\n\
    \                tr class=\"ct-color{c}\"\n                    catalog_row $name\
    \ $value $schema\n                # $c = 1 - c\n    \n    %catalog_1 item\n  \
    \      $c = 0          # alternating color of rows: 0 or 1\n        table .catalog-1\n\
    \            for name, value in item.get_entries()\n                $schema =\
    \ item.get_schema(name)\n                tr class=\"ct-color{c}\"\n          \
    \          if schema.is_catalog\n                        td .ct-nested colspan=2\n\
    \                            div .ct-field | {name}\n                        \
    \    catalog_2 $value $schema.values $c\n                    else\n          \
    \              catalog_row $name $value $schema\n                $c = 1 - c\n\
    \                \n    %properties item\n        # for field, value in item.data.items()\n\
    \        #     $schema = $item.get_schema(field)\n        #     $schema_json =\
    \ generic_schema.dump_json(schema)\n        #     $entry = (schema_json, $item.dump_data())\n\
    \        #     $entries.append(entry)\n        from hyperweb.serialize import\
    \ $JSON\n        \n        custom \"hw-item-page\"\n            # p style=\"display:none\"\
    \ type=\"json\" #item     | $item.dump_data()\n            p style=\"display:none\"\
    \ type=\"json\" #item     | $JSON.dump(item.data)\n            p style=\"display:none\"\
    \ type=\"json\" #category | $item.category.dump_data()\n            < catalog_1\
    \ $item\n            div style=\"text-align:right; padding-top:20px\"\n      \
    \          button #cancel-changes .btn .btn-secondary disabled=False | Cancel\n\
    \                button #save-changes   .btn .btn-primary   disabled=False | Save\n\
    \n    %page @body\n        doctype\n        ...html @body\n    \n    %page_item\
    \ @extra item\n        page\n            head\n                title | $item['name']?\
    \ $item.ciid(False)\n                assets\n                style / $item.registry.files.open('base.css')['content']\n\
    \    \n            # body .container : div .row\n            #   div .col-1\n\
    \            #   div .col-10\n            body\n                h1\n         \
    \           $ciid = item.ciid()\n                    try\n                   \
    \     | $item['name']\n                        span style=\"font-size:40%; font-weight:normal\"\
    \ / $ciid\n                    else / $ciid\n                \n              \
    \  h2 | Properties\n                properties $item\n                \n     \
    \           @extra\n            \n    %page_category category\n        page_item\
    \ category\n            h2 | Items\n            table\n                for item\
    \ in list(category.registry.load_items(category))\n                    tr\n  \
    \                      td / #{item.iid} &nbsp;\n                        td\n \
    \                           $ iname = item['name']? or item\n                \
    \            try\n                                a href=$item.url() | $iname\n\
    \                            else\n                                | $iname (no\
    \ URL)\n    \n    "
- id: [1, 1]
  files:
    base.hy: [8, 3]
    base.css: [8, 1]
- id: [10, 1]
  path: /home/marcin/Documents/priv/catalog/src/django-app/hyperweb/static/protocols.js
- id: [2, 1]
  name: Meta
  categories: {category: 0, item: 7}
- id: [2, 2]
  name: System
  categories: {space: 2, app: 3, site: 6, dir: 1, file: 10}
- id: [4, 1]
  name: Admin
- id: [3, 1]
  name: Catalog
  base_url: http://localhost:8001/
  spaces: {meta: 1, sys: 2}
  routing: spaces
- id: [6, 1]
  name: catalog.wiki
  base_url: http://localhost:8001/
  directory: 1
  apps:
    admin: [4, 1]
    ? ''
    : 1
- id: [7, 1]
  title: Ala ma kota Sierściucha i psa Kłapoucha.
- id: [7, 2]
  title: ąłęÓŁŻŹŚ
  name: test_item
