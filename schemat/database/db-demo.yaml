- __id:
    - 1
    - 100
  name: catalog.wiki
  URL: http://127.0.0.1:3000
  path_internal: /$
  path_local: /local
  routes:
    - - - 8
        - 101
      - $
    - - - 5
        - 103
      - apps
    - - - 6
        - 101
      - local
    - - - 5
        - 104
      - site
    - - - 5
        - 1
      - system
    - - - 5
        - 106
    - - - 9
        - 101
- __id:
    - 3
    - 101
  content: export let print = console.log
- __id:
    - 3
    - 102
  content: |-
    import {print} from '../site/utils.js'
    export function check() { print('called widgets.js:check()') } 
    //let fs = await importLocal('fs')
    //print('fs:',fs)
- __id:
    - 5
    - 102
  name: /demo
- __id:
    - 5
    - 103
  name: /apps
  files:
    demo:
      - 5
      - 102
    paperity:
      - 5
      - 107
- __id:
    - 5
    - 104
  name: /site
  files:
    utils.js:
      - 3
      - 101
    widgets.js:
      - 3
      - 102
- __id:
    - 6
    - 101
  name: /local
  path: .
- __id:
    - 8
    - 101
  name: /$
- __id:
    - 9
    - 101
  name: Catalog
  spaces:
    sys.category:
      - 0
      - 0
    sys.site:
      - 0
      - 1
    sys.dir:
      - 0
      - 5
    sys.file:
      - 0
      - 3
- __id:
    - 0
    - 100
  name: Varia
  info: Category of items that do not belong to any specific category.
  class_body: >-
    static check() { import('/local/utils.js').then(mod =>
    console.log("Varia.code: imported ", mod)) }

    static error() { throw new Error('Varia/code/error()') }
  fields:
    title:
      "@": schemat.type.STRING
- __id:
    - 100
    - 101
  title: Ala ma kota Sierściucha i psa Kłapoucha.
- __id:
    - 100
    - 102
  title: ąłęÓŁŻŹŚ
- __id:
    - 5
    - 106
  name: domain
  info: Folder with public static files that must be accessible at the domain
    root, like .../favicon.ico, /robots.txt etc.
  files:
    favicon.ico:
      - 4
      - 100
- __id:
    - 0
    - 200
  __data:
    - - TwitterPost
      - name
    - - text:
          "@": schemat.type.STRING
      - fields
    - - import { P, BR } from '/local/react-utils.js'
      - code
    - - view: |
          let text = this.get('text')
          return P('Post:', BR(), text)
      - views
    - - |
        // DRAFT...
        // import {print} from '/site/utils.js'
        // console.log('print:', print)
        // console.log('TwitterPost/code executed')

        // import {check} from '/site/widgets.js'
        // import {Item} from '/local/item.js'
        // import vm from 'vm'
        // check()
        // console.log('registry:', registry)
        // console.log('Item:', Item)
        // console.log('vm:', vm)
      - code
    - - |
        VIEW_view_old() {
            this.assertLoaded()
            console.log('this.utils #2:', this.utils)
            console.log('TwitterPost: imported print()')
            let text = this.get('text')
            return P('Post', BR(), text)
        }
      - class_body
    - - |-
        // FOR RECORD ONLY...
        // this method works OK (no await import)
        init_OK() {
            console.log('this.utils #1: started...')
            return import('/site/utils.js').then(utils => {
                this.utils = utils
                console.log('this.utils #1:', this.utils)
            })
        }
        // this method works WRONG: the web request is being completed while 
        // the method waits on await import below (!?)
        async init_ERR() {
            console.log('this.utils #1: started...')
            let utils = await import('/site/utils.js')
            this.utils = utils
            console.log('this.utils #1:', this.utils)
        }
      - class_body
- __id:
    - 4
    - 100
  name: favicon.ico
  path: /home/marcin/Documents/priv/catalog/src/schemat/assets/favicon.ico
- __id:
    - 51
    - 100
  name: mysql-paperity
  info: |
    Connects through ssh tunneling. Must launch this in console beforehand:
    autossh -p 55522 -f paperity@srv.paperity.org -L 3307:127.0.0.1:3306 -N
  host: localhost
  port: "3307"
  user: paperity
  database: paperity
  password: pe45n1bc
  tables:
    /apps/paperity/Journal: pap_journals
    /apps/paperity/Paper: pap_papers_view
  readonly: true
- __id:
    - 200
    - 100
  name: Post A
  text: Ala ma kota
- __id:
    - 5
    - 107
  name: /paperity
  files:
    Journal:
      - 0
      - 201
    Paper:
      - 0
      - 202
- __id:
    - 0
    - 201
  name: Journal
  info: Paperity's Journal object.
  fields:
    pid:
      "@": schemat.type.INTEGER
    title:
      "@": schemat.type.STRING
- __id:
    - 0
    - 202
  name: Paper
  info: Paperity's Paper object.
