- __id:
    - 0
    - 0
  entries:
    - key: name
      value: Category
    - key: info
      value: Category of items that represent categories
    - key: class
      value: schemat.item.Category
    - key: cache_ttl
      value: 60
    - key: fields
      value:
        entries:
          - key: class
            value:
              info: Full (dotted) name of a Javascript class to be used for items of this
                category. If `code` or `code_*` is configured, the class is
                subclassed dynamically to insert the desired code.
              "@": schemat.type.STRING
          - key: code
            value:
              info: Source code of a subclass (a body without heading) that will be created
                for this category. The subclass inherits from the `class`, or
                the class of the first base category, or the top-level Item.
              "@": schemat.type.CODE
          - key: code_client
            value:
              info: Source code appended to the body of this category's class when the
                category is loaded on a client (exclusively).
              "@": schemat.type.CODE
          - key: code_server
            value:
              info: Source code appended to the body of this category's class when the
                category is loaded on a server (exclusively).
              "@": schemat.type.CODE
          - key: cache_ttl
            value:
              info: Time To Live (TTL). Determines for how long (in seconds) an item of this
                category is kept in a server-side cache after being loaded from
                DB, for reuse by subsequent requests. A real number. If zero,
                the items are evicted immediately after each request.
              default: 5
              "@": schemat.type.NUMBER
          - key: fields
            value:
              info: Fields must have unique names.
              default:
                entries:
                  - key: name
                    value:
                      info: Display name of the item. May contain spaces, punctuation, non-latin
                        characters.
                      "@": schemat.type.STRING
                  - key: info
                    value:
                      info: Internal description of the item.
                      "@": schemat.type.TEXT
                  - key: prototype
                    value:
                      info: An item of the same category that serves as a prototype for this one, that
                        is, provides default values for missing properties of
                        this item. Multiple prototypes are allowed, the first
                        one has priority over subsequent ones. Prototypes can be
                        defined for regular items, as well as for categories -
                        the latter case represents category inheritance.
                        Items/categories may inherit individual entries from
                        catalog-valued fields, see Item.getInherited(). In this
                        way, subcategories inherit individual field schemas as
                        defined in base categories.
                      "@": schemat.type.ITEM
                "@": schemat.data.Catalog
              values:
                "@": schemat.type.SCHEMA
              "@": schemat.type.CATALOG
        "@": schemat.data.Catalog
  "@": schemat.data.Data
- __id:
    - 0
    - 1
  name: Site
  info: Top-level URL routing + global configuration of applications, servers,
    startup.
  class: schemat.item.Site
  fields:
    URL:
      info: "Base URL at which the website is served: protocol + domain + root path
        (if any); no trailing '/'."
      "@": schemat.type.STRING
    path_filesystem:
      info: URL path of the root folder of this site's file system.
      "@": schemat.type.STRING
    path_internal:
      info: URL path of an internal application for default/admin web access to items.
        The application should handle all items.
      "@": schemat.type.STRING
    routes:
      values:
        "@": schemat.type.ITEM
      "@": schemat.type.CATALOG
- __id:
    - 0
    - 2
  name: File
  info: File with a text content.
  class: schemat.item.File
  fields:
    content:
      "@": schemat.type.CODE
    mimetype:
      info: MIME type string (must include '/') to be set as Content-Type when serving
        file download; or an extension ('js', 'jpg', ...) to be converted to an
        appropriate type. If missing, response mimetype is inferred from a URL
        path extension, if any.
      "@": schemat.type.STRING
    format:
      "@": schemat.type.STRING
    _is_file:
      default: true
      "@": schemat.type.BOOLEAN
- __id:
    - 0
    - 3
  name: FileLocal
  info: File located on a local disk, identified by its local file path.
  prototype:
    - 0
    - 2
  class: schemat.item.FileLocal
  fields:
    path:
      "@": schemat.type.STRING
- __id:
    - 0
    - 4
  name: Folder
  info: A directory of files, each file has a unique name (path). May contain
    nested directories.
  class: schemat.item.Folder
  fields:
    files:
      keys:
        "@": schemat.type.FILENAME
      values:
        "@": schemat.type.ITEM
      "@": schemat.type.CATALOG
    _is_folder:
      default: true
      "@": schemat.type.BOOLEAN
- __id:
    - 0
    - 5
  name: FolderLocal
  info: |-
    File folder located on a local disk, identified by its local file path.
    Gives access to all files and folders beneath the path.
  prototype:
    - 0
    - 4
  class: schemat.item.FolderLocal
  fields:
    path:
      "@": schemat.type.STRING
- __id:
    - 0
    - 6
  name: Application
  info: Category of application records. An application groups all spaces &
    categories available in the system and provides system-level configuration.
  class: schemat.item.Application
  fields:
    findRoute:
      "@": schemat.type.CODE
    urlPath:
      "@": schemat.type.CODE
    class:
      "@": schemat.type.STRING
- __id:
    - 0
    - 7
  name: Router
  info: A set of sub-applications or sub-folders, each bound to a different URL
    prefix.
  fields:
    routes:
      values:
        "@": schemat.type.ITEM
      "@": schemat.type.CATALOG
  class: schemat.item.Router
- __id:
    - 0
    - 8
  name: AppBasic
  info: Application that serves items on simple URLs of the form /CID:IID. Mainly
    used for system & admin purposes, or as a last-resort default for URL
    generation.
  class: schemat.item.AppBasic
  fields:
    category:
      info: Optional category(ies) of items handled by this application.
      category_base:
        =:
          - 0
          - 0
        "@": (item)
      "@": schemat.type.ITEM
    drop_cid:
      info: If true, CID is excluded from URL paths. Requires that a single `category`
        is declared for the application; and implies that only the exact
        instances (no inheritance) of this category are handled (otherwise,
        instances of subclasses are handled, too).
      "@": schemat.type.BOOLEAN
- __id:
    - 0
    - 9
  name: AppSpaces
  info: "Application for accessing public data through verbose paths of the form:
    .../SPACE:IID, where SPACE is a text identifier assigned to a category in
    `spaces` property."
  class: schemat.item.AppSpaces
  fields:
    spaces:
      values:
        category_base:
          =:
            - 0
            - 0
          "@": (item)
        "@": schemat.type.ITEM
      "@": schemat.type.CATALOG
- __id:
    - 2
    - 1
  content: export let print = console.log
- __id:
    - 2
    - 2
  content: |-
    import {print} from '../site/utils.js'
    export function check() { print('called /site/widgets.js/check()') } 
    //let fs = await importLocal('fs')
    //print('fs:',fs)
- __id:
    - 4
    - 1
  name: /demo
- __id:
    - 4
    - 2
  name: /apps
  files:
    demo:
      - 4
      - 1
- __id:
    - 4
    - 3
  name: /site
  files:
    utils.js:
      - 2
      - 1
    widgets.js:
      - 2
      - 2
- __id:
    - 4
    - 4
  name: /system
  files:
    Application:
      - 0
      - 6
    File:
      - 0
      - 2
    Folder:
      - 0
      - 4
    Site:
      - 0
      - 1
- __id:
    - 5
    - 1
  name: /local
  path: /home/marcin/Documents/priv/catalog/src/schemat
- __id:
    - 4
    - 5
  name: /files
  files:
    apps:
      - 4
      - 2
    local:
      - 5
      - 1
    site:
      - 4
      - 3
    system:
      - 4
      - 4
- __id:
    - 8
    - 1
  name: /$
- __id:
    - 9
    - 1
  name: Catalog
  spaces:
    sys.category:
      - 0
      - 0
    sys.site:
      - 0
      - 1
    sys.dir:
      - 0
      - 4
    sys.file:
      - 0
      - 2
