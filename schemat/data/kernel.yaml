- __id: 0
  name: Category
  info: Root category. Category of objects that represent categories. Is a
    category for itself and for other categories.
  schema:
    class:
      info: 'Import path of the JS class (e.g., "path/.../file.js:ClassName") to be
        linked to the objects of this category upon object.load(). Can be
        overriden on a per-object basis by setting object.__class property.
        Importantly, `class` impacts the category itself: all *static* endpoints
        defined in this class are treated as endpoints of the category object,
        not instances.'
      default: schemat:Item
      "@": schemat/types/type.js:STRING
    defaults:
      type_values:
        "@": schemat/types/type.js:GENERIC
      info: Default values for properties of objects in this category. The key cannot
        be empty. Same key can be repeated.
      "@": schemat/types/catalog.js:CATALOG
    class_name:
      info: Custom internal name for the Class of this category, for debugging. Also
        used as an alias when exporting the Class from the category's module.
      "@": schemat/types/type.js:STRING
    class_init:
      repeated: true
      info: Module-level initialization for this category's Javascript class.
        Typically contains import statements and global variables. Precedes the
        Class definition (`class_body`, `views`) in the category's module code.
      "@": schemat/types/type.js:CODE
    class_body:
      repeated: true
      info: Source code of the class (a body without heading) that will be created for
        this category. The class inherits from the `class`, or the class of the
        first base category, or the top-level Item.
      "@": schemat/types/type.js:CODE
    pages:
      type_values:
        "@": schemat/types/type.js:CODE
      info: Source code of functions that generate static HTML response for particular
        access methods of this category's items.
      "@": schemat/types/catalog.js:CATALOG
    views:
      type_values:
        "@": schemat/types/type.js:CODE
      info: "Body of React functional components (no function header) to be added
        dynamically to the category's Class body as VIEW_name(props) methods for
        rendering item views. Inside the function body, `this` refers the item
        to be rendered. Alternatively, the code of each view may consist of a
        method header, view() {...}, and be accompanied by supporting methods:
        title(), assets() - like in a class body."
      "@": schemat/types/catalog.js:CATALOG
    default_endpoints:
      type_values:
        "@": schemat/types/type.js:STRING
      info: List of [PROTOCOL, endpoint] pairs that define default endpoint(s) for
        objects of this category when requested via a URL with no explicit
        endpoint.
      default:
        GET: view
        GET/2: admin
        GET/3: record
        CALL: self
        "@": schemat:Catalog
      "@": schemat/types/catalog.js:CATALOG
    schema:
      type_values:
        "@": schemat/types/type.js:TYPE
      info: Names and data types of properties of objects in this category.
      "@": schemat/types/catalog.js:CATALOG
    allow_custom_fields:
      default: false
      info: If true, it is allowed to set undeclared (out-of-schema) fields in objects
        - their schema is GENERIC()
      "@": schemat/types/type.js:BOOLEAN
    versioning:
      default: false
      info: If true, updated or newly created objects of this category receive the
        __ver property that holds this object's version number (1,2,3,...) and
        is automatically incremented on every update.
      "@": schemat/types/type.js:BOOLEAN
    history:
      default: false
      info: If true, old versions of objects in this category are preserved on every
        update by creating an immutable Revision that stores the object's
        previous content. Only effective with versioning=true.
      "@": schemat/types/type.js:BOOLEAN
    immutable:
      default: false
      info: If true, objects of this category cannot be modified after creation.
      "@": schemat/types/type.js:BOOLEAN
    "@": schemat:Catalog
  defaults:
    __ttl: 60
    schema:
      __category:
        info: Category of this object. Determines its behavior and the schema of its
          properties. Each category itself is an object of the Root Category
          (ID=0).
        repeated: true
        "@": schemat/types/type.js:REF
      __class:
        info: Import path of the JS class ("path/file.js:ClassName") that will be linked
          to this object during loading. (NOTE this is likely obsolete, set
          category.class instead?)
        "@": schemat/types/type.js:STRING
      __extends:
        info: An object that serves as a prototype for this one, that is, provides
          default values for missing properties. Multiple prototypes are
          allowed, the first one has priority over subsequent ones. Prototypes
          can be defined for regular objects and for categories - the latter
          case represents category inheritance. Objects/categories may inherit
          individual entries from catalog-valued fields (catalogs are merged,
          not overwritten during inheritance). For example, in this way,
          subcategories inherit individual field schemas from base categories,
          and may add their own fields to the existing ones.
        repeated: true
        inherit: false
        "@": schemat/types/type.js:REF
      __ver:
        info: Version number of the object's content, automatically incremented on every
          update.
        min: 1
        "@": schemat/types/type.js:INTEGER
      __container:
        info: Parent URL container of this object. The chain of containers leading from
          the root container to a given object defines the access path of this
          object, which can be converted to a canonical URL path of the object
          by removing blank segments.
        "@": schemat/types/type.js:REF
      __path:
        impute: _impute__path
        inherit: false
        "@": schemat/types/type.js:STRING
      __url:
        impute: _impute__url
        inherit: false
        "@": schemat/types/type.js:STRING
      __status:
        info: Set to "DRAFT" if the object's record is not yet fully initialized in the
          database.
        inherit: false
        "@": schemat/types/type.js:STRING
      __ttl:
        default: 10
        info: Time To Live (TTL) of an object, in seconds. Determines for how long the
          object is kept in a server-side cache and reused after being loaded
          from DB. If zero, the object is evicted on the nearest cache purge. A
          real number.
        "@": schemat/types/type.js:NUMBER
      name:
        info: Display name of the object. May contain spaces, punctuation, non-latin
          characters.
        repeated: true
        default: ""
        "@": schemat/types/type.js:STRING
      info:
        info: Description or summary of the object.
        repeated: true
        "@": schemat/types/type.js:TEXT
      html_title:
        info: HTML title to be used for when this object is rendered.
        repeated: true
        "@": schemat/types/type.js:STRING
      "@": schemat:Catalog
    "@": schemat:Catalog
  versioning: true
  class: schemat:Category
  "@": schemat:Data
- __id: 1
  name: Site
  info: Top-level URL routing + global configuration of applications, servers,
    startup.
  class: schemat/std/site.js:Site
  schema:
    cluster:
      info: A Cluster of compute & storage nodes that host this site and database.
      "@": schemat/types/type.js:REF
    database:
      info: Database instance that contains all data of this site
      "@": schemat/types/type.js:REF
    default_path:
      info: URL path of a default container that can be used to access any object via
        its ID. For internal purposes. Should contain a leading slash and no
        trailing slash.
      "@": schemat/types/type.js:PATH
    root:
      info: "Root of the object hierarchy and the starting point for URL routing: each
        URL path is mapped to an object placed somewhere below the `root`
        container."
      category:
        "@": 2
      "@": schemat/types/type.js:REF
    global:
      type_values:
        "@": schemat/types/type.js:REF
      info: A catalog of essential application objects - typically categories - that
        will be loaded and made globally available to the application code via
        `globalThis.XXX` right after initialization of `schemat.site` object.
      "@": schemat/types/catalog.js:CATALOG
    cache_purge_interval:
      default: 10
      info: Interval [sec] at which the server-side cache is purged from expired
        objects. A real number.
      "@": schemat/types/type.js:NUMBER
    "@": schemat:Catalog
  __extends:
    "@": 5
  __category:
    "@": 0
  "@": schemat:Data
- __id: 2
  name: Container
  __category:
    "@": 0
  schema:
    _is_container:
      default: true
      "@": schemat/types/type.js:BOOLEAN
    "@": schemat:Catalog
  "@": schemat:Data
- __id: 3
  name: File
  info: File with a text content.
  schema:
    content:
      "@": schemat/types/type.js:CODE
    mimetype:
      info: MIME type string (must include '/') to be set as Content-Type when serving
        file download; or an extension ('js', 'jpg', ...) to be converted to an
        appropriate type. If missing, response mimetype is inferred from the URL
        path extension, if present.
      "@": schemat/types/type.js:STRING
    format:
      "@": schemat/types/type.js:STRING
    "@": schemat:Catalog
  class: schemat/std/files.js:File
  __category:
    "@": 0
  "@": schemat:Data
- __id: 4
  name: LocalFile
  info: File located on a local disk, identified by its local file path.
  __extends:
    "@": 3
  schema:
    local_path:
      "@": schemat/types/type.js:STRING
    "@": schemat:Catalog
  class: schemat/std/files.js:LocalFile
  __category:
    "@": 0
  "@": schemat:Data
- __id: 5
  name: Directory
  info: >-
    A container that keeps an explicit list of named `entries`: regular objects
    or nested containers. Behaves like a file directory in a local file system,
    but contains web objects, not just files. 


    See also the Namespace containers for unbounded collections of objects with dynamically assigned names.
  schema:
    entries:
      type_values:
        "@": schemat/types/type.js:REF
      "@": schemat/types/catalog.js:CATALOG
    "@": schemat:Catalog
  class: schemat/std/containers.js:Directory
  __extends:
    "@": 2
  __category:
    "@": 0
  "@": schemat:Data
- __id: 6
  name: LocalDirectory
  info: A Directory whose content is located on a local disk, in the folder
    identified by `local_path`. Translates all URL requests to file paths inside
    `local_path`. The files located outside this folder and accessed via ".."
    are *not* returned. Only the files whose extension is listed in
    `extensions_allowed` (case insensitive) are returned.
  schema:
    local_path:
      "@": schemat/types/type.js:STRING
    extensions_allowed:
      default: html htm xml css postcss pcss js ejs jpg jpeg png gif bmp svg mp3 mp4
        wav pdf webp ico ttf woff woff2
      info: Space-separated list of extensions (case insensitive) of files that are
        allowed to be returned from inside this local directory. Requests for
        files that have any other extension are treated as invalid and result in
        'URL not found' error.
      "@": schemat/types/type.js:STRING
    paths_forbidden:
      default: /_ /.git /.svn/
      info: Space-separated list of substrings that must NOT occur in the target file
        path after its translation from the URL. If any of these substrings is
        present, 'URL not found' error is returned regardless of the target file
        extension.
      "@": schemat/types/type.js:STRING
    paths_allowed:
      default: robots.txt ads.txt security.txt humans.txt manifest.json
      info: Explicit list of file paths, space-separated, that are allowed to be
        served even if excluded by other rules (e.g., due to missing or
        disallowed extension). NO leading slash.
      "@": schemat/types/type.js:STRING
    "@": schemat:Catalog
  class: schemat/std/files.js:LocalDirectory
  __extends:
    "@": 5
  __category:
    "@": 0
  "@": schemat:Data
- __id: 7
  name: Namespace
  info: "Unbounded collection of objects: each object that satisfies the criteria
    of the namespace is accepted and can receive a (dynamically created) unique
    identifier, typically built from the object's ID. Typically, a namespace is
    placed as a leaf node on a URL route and does not contain nested
    containers."
  class: schemat/std/containers.js:Namespace
  __extends:
    "@": 2
  __category:
    "@": 0
  "@": schemat:Data
- __id: 8
  name: ObjectSpace
  info: Namespace that maps all objects to URLs of the form /<ID>. Optionally
    restricted to a specific category(ies) of objects.
  schema:
    category:
      category:
        "@": 0
      info: Optional category(ies) of objects to be included in this namespace. Every
        object that is not an instance of at least one of these categories is
        excluded.
      "@": schemat/types/type.js:REF
    "@": schemat:Catalog
  class: schemat/std/containers.js:ObjectSpace
  __extends:
    "@": 7
  __category:
    "@": 0
  "@": schemat:Data
- __id: 9
  name: Category_IID_Namespace
  info: "Namespace for accessing public data through verbose paths of the form:
    .../SPACE:IID, where SPACE is a text identifier assigned to a category in
    `spaces` property."
  schema:
    spaces:
      type_values:
        category:
          "@": 0
        "@": schemat/types/type.js:REF
      "@": schemat/types/catalog.js:CATALOG
    "@": schemat:Catalog
  class: schemat/std/containers.js:Category_IID_Namespace
  __extends:
    "@": 7
  __category:
    "@": 0
  "@": schemat:Data
- __id: 10
  name: Cluster
  __category:
    "@": 0
  schema:
    "@": schemat:Catalog
  "@": schemat:Data
- __id: 11
  name: Database
  info: Internal database. An array of data Rings stacked on top of each other.
  schema:
    rings:
      info: Array of Ring objects
      "@": schemat/types/type.js:GENERIC
    "@": schemat:Catalog
  class: schemat/db/db.js:Database
  __category:
    "@": 0
  "@": schemat:Data
- __id: 12
  name: Ring
  info: Category for data rings, i.e., stackable database layers in a Database
    object.
  schema:
    readonly:
      "@": schemat/types/type.js:BOOLEAN
    start_id:
      info: the lowest ID allowed in this ring
      "@": schemat/types/type.js:INTEGER
    stop_id:
      info: upper bound for IDs in this ring (all IDs must be strictly lower than
        this)
      "@": schemat/types/type.js:INTEGER
    data_sequence:
      info: DataSequence that keeps all primary objects of this ring
      category:
        "@": 14
      "@": schemat/types/type.js:REF
    index_sequence:
      info: IndexSequence that keeps all indexes of this ring
      category:
        "@": 22
      "@": schemat/types/type.js:REF
    indexes:
      info: Map of Indexes and their names
      "@": schemat/types/type.js:GENERIC
    "@": schemat:Catalog
  class: schemat/db/db.js:Ring
  __category:
    "@": 0
  "@": schemat:Data
- __id: 13
  name: Sequence
  info: Base category for sequences of key-value records, either data or indexes.
  schema:
    ring:
      info: parent Ring of this sequence
      category:
        "@": 12
      "@": schemat/types/type.js:REF
    blocks:
      info: array of Blocks containing records of this sequence
      "@": schemat/types/type.js:GENERIC
    flush_delay:
      info: for how long [sec] the local-file data flush can be delayed waiting for
        more writes to arrive that can be grouped together
      "@": schemat/types/type.js:NUMBER
    "@": schemat:Catalog
  defaults:
    flush_delay: 0.01
    "@": schemat:Catalog
  __category:
    "@": 0
  "@": schemat:Data
- __id: 14
  name: DataSequence
  info: Category for the main data sequence that contains serialized web objects.
  class: schemat/db/sequence.js:DataSequence
  __extends:
    "@": 13
  __category:
    "@": 0
  "@": schemat:Data
- __id: 15
  name: Index
  info: Base category for indexes over the data sequence.
  __extends:
    "@": 24
  __category:
    "@": 0
  "@": schemat:Data
- __id: 16
  name: PrimeIndexSequence
  info: An index that receives record updates from the main data sequence, so
    input records represent objects.
  schema:
    "@": schemat:Catalog
  __extends:
    "@": 15
  __category:
    "@": 0
  "@": schemat:Data
- __id: 17
  name: IndexByCategory
  info: "Index that maps categories to member objects: the key is [category ID,
    item ID]."
  class: schemat/db/indexes.js:IndexByCategory
  __extends:
    "@": 16
  __category:
    "@": 0
  "@": schemat:Data
- __id: 18
  name: Block
  info: A continuous subrange of records of a data/index sequence, physically
    located on a single machine.
  schema:
    sequence:
      info: parent Sequence this block is a part of
      "@": schemat/types/type.js:REF
    filename:
      info: path to a local file that contains records of this block
      "@": schemat/types/type.js:STRING
    format:
      info: "storage format: data-yaml, index-jl, rocksdb (in the future), ..."
      "@": schemat/types/type.js:STRING
    "@": schemat:Catalog
  __category:
    "@": 0
  "@": schemat:Data
- __id: 19
  name: DataBlock
  info: Block of a DataSequence.
  schema:
    insert_mode:
      "@": schemat/types/type.js:STRING
    "@": schemat:Catalog
  class: schemat/db/block.js:DataBlock
  __extends:
    "@": 18
  __category:
    "@": 0
  "@": schemat:Data
- __id: 20
  name: IndexBlock
  info: Block of an Index sequence.
  schema:
    "@": schemat:Catalog
  class: schemat/db/block.js:IndexBlock
  __extends:
    "@": 18
  __category:
    "@": 0
  "@": schemat:Data
- __id: 21
  name: Node
  __category:
    "@": 0
  "@": schemat:Data
- __id: 22
  name: IndexSequence
  info: Category for sequences of index records.
  class: schemat/db/sequence.js:IndexSequence
  __extends:
    "@": 13
  __category:
    "@": 0
  "@": schemat:Data
- __id: 23
  name: index-by-category
  record_schema:
    fields:
      cid:
        blank: true
        "@": schemat/types/type.js:INTEGER
      id:
        "@": schemat/types/type.js:INTEGER
      "@": :Map
    properties: []
    "@": schemat/db/records.js:RecordSchema
  __category:
    "@": 17
  "@": schemat:Data
- __id: 24
  name: Operator
  schema:
    source:
      info: source Sequence that feeds data to this index
      "@": schemat/types/type.js:REF
    record_schema:
      info: Schema of records produced by this operator, as an instance of
        RecordSchema
      "@": schemat/types/type.js:GENERIC
    "@": schemat:Catalog
  __category:
    "@": 0
  "@": schemat:Data
- __id: 25
  name: Page
  info: >-
    A standalone HTML page that is not strictly related to any specific object
    or category and is implemented in its own static file or as a JS function.
    Typically, a landing page, like a home page.


    Pages that are related to a particular object or category are better implemented as view methods (instance-level or static) of the category's Javascript class.
  class: schemat/web/page.js:Page
  schema:
    view_endpoint:
      info: Import path of the page rendering function, `view(request)`, that should
        be used to handle requests at the `::view` endpoint of the URL where
        this Page is deployed.
      "@": schemat/types/type.js:STRING
    "@": schemat:Catalog
  __category:
    "@": 0
  "@": schemat:Data
- __id: 26
  name: Revision
  info: Immutable snapshot of past content of the `target` object at a particular
    version number.
  schema:
    target:
      info: The object whose older version is stored in this revision.
      "@": schemat/types/type.js:REF
    ver:
      info: Version number of the `target` that is stored in this revision.
      "@": schemat/types/type.js:INTEGER
    data:
      info: JSON-stringified `__data` of the target object at version `ver`.
      "@": schemat/types/type.js:STRING
    "@": schemat:Catalog
  immutable: true
  __category:
    "@": 0
  "@": schemat:Data
